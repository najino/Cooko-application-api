// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL") 
}

model MealCategory{
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  slug  String @unique 
  image String
  recipes RecipeCategories[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ingredients Ingredients[]

  @@map("meal_categories")
}


model Ingredients {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  slug        String @unique
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  categoryId String @db.ObjectId
  recipes RecipeIngredients[]

  category MealCategory @relation(fields: [categoryId], references: [id])
  @@map("ingredients")
}

model Recipe {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  image        String?
  description  String
  instructions String
  categoryIds  String[]   @db.ObjectId
  ingredients  RecipeIngredients[] 
  categories   RecipeCategories[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("recipes")
}


// Pivot table for many to many relationship between recipes and categories
model RecipeCategories{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  recipeId String @db.ObjectId
  categoryId String @db.ObjectId

  category MealCategory @relation(fields: [categoryId], references: [id])
  recipe Recipe @relation(fields: [recipeId], references: [id])

  @@map("recipe_categories")
}

model RecipeIngredients{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  recipeId String @db.ObjectId
  ingredientId String @db.ObjectId

  ingredient Ingredients    @relation(fields: [ingredientId], references: [id])
  recipe Recipe @relation(fields: [recipeId], references: [id])

  @@index([recipeId, ingredientId])
  @@map("recipe_ingredients")
}



